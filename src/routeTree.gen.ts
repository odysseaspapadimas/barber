/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AdminIndexRouteImport } from './routes/admin/index'
import { Route as ConfirmBookingIdRouteImport } from './routes/confirm/$bookingId'
import { Route as AdminLoginRouteImport } from './routes/admin/login'
import { Route as ApiTrpcSplatRouteImport } from './routes/api.trpc.$'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminIndexRoute = AdminIndexRouteImport.update({
  id: '/admin/',
  path: '/admin/',
  getParentRoute: () => rootRouteImport,
} as any)
const ConfirmBookingIdRoute = ConfirmBookingIdRouteImport.update({
  id: '/confirm/$bookingId',
  path: '/confirm/$bookingId',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminLoginRoute = AdminLoginRouteImport.update({
  id: '/admin/login',
  path: '/admin/login',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiTrpcSplatRoute = ApiTrpcSplatRouteImport.update({
  id: '/api/trpc/$',
  path: '/api/trpc/$',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin/login': typeof AdminLoginRoute
  '/confirm/$bookingId': typeof ConfirmBookingIdRoute
  '/admin': typeof AdminIndexRoute
  '/api/trpc/$': typeof ApiTrpcSplatRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin/login': typeof AdminLoginRoute
  '/confirm/$bookingId': typeof ConfirmBookingIdRoute
  '/admin': typeof AdminIndexRoute
  '/api/trpc/$': typeof ApiTrpcSplatRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/admin/login': typeof AdminLoginRoute
  '/confirm/$bookingId': typeof ConfirmBookingIdRoute
  '/admin/': typeof AdminIndexRoute
  '/api/trpc/$': typeof ApiTrpcSplatRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin/login'
    | '/confirm/$bookingId'
    | '/admin'
    | '/api/trpc/$'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/admin/login' | '/confirm/$bookingId' | '/admin' | '/api/trpc/$'
  id:
    | '__root__'
    | '/'
    | '/admin/login'
    | '/confirm/$bookingId'
    | '/admin/'
    | '/api/trpc/$'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminLoginRoute: typeof AdminLoginRoute
  ConfirmBookingIdRoute: typeof ConfirmBookingIdRoute
  AdminIndexRoute: typeof AdminIndexRoute
  ApiTrpcSplatRoute: typeof ApiTrpcSplatRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/': {
      id: '/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/confirm/$bookingId': {
      id: '/confirm/$bookingId'
      path: '/confirm/$bookingId'
      fullPath: '/confirm/$bookingId'
      preLoaderRoute: typeof ConfirmBookingIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/login': {
      id: '/admin/login'
      path: '/admin/login'
      fullPath: '/admin/login'
      preLoaderRoute: typeof AdminLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/trpc/$': {
      id: '/api/trpc/$'
      path: '/api/trpc/$'
      fullPath: '/api/trpc/$'
      preLoaderRoute: typeof ApiTrpcSplatRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminLoginRoute: AdminLoginRoute,
  ConfirmBookingIdRoute: ConfirmBookingIdRoute,
  AdminIndexRoute: AdminIndexRoute,
  ApiTrpcSplatRoute: ApiTrpcSplatRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { startInstance } from './start.ts'
declare module '@tanstack/react-start' {
  interface Register {
    ssr: true
    router: Awaited<ReturnType<typeof getRouter>>
    config: Awaited<ReturnType<typeof startInstance.getOptions>>
  }
}
